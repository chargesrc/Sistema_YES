/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;
import static interfaces.abmPrincipal.panelA;
import java.awt.Dimension;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author joni
 */
public class abmProfesor extends javax.swing.JInternalFrame {
    Connection conex=conexion.Conexion.conectar();
    ResultSet rs;
    Object[] datos=new Object[3];
    DefaultTableModel modelo=new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int filas,int columnas){
            return false;
        }
    };
    
    int datodni,idpersona,persona,ultimoid;
    int dni;
    boolean borrado;
    public int cboxitem=0;
    /**
     * Creates new form abmProfesor
     */
    public abmProfesor() {
        initComponents();
    }
    
    public void mostrarPersona(){
        modelo.setRowCount(0);
        modelo.setColumnCount(0);
        modelo.addColumn("NOMBRE");
        modelo.addColumn("APELLIDO");
        modelo.addColumn("DNI");
        try {
            tableProfesor.setModel(modelo);
            rs=clase.Profesor.MostrarPersona(conex);
            while(rs.next()){
                datos[0]=rs.getString("nombre");
                datos[1]=rs.getString("apellido");
                datos[2]=rs.getString("dni");
                modelo.addRow(datos);
            }
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        }
    }
    
    public void mostrarProfesor(){
        try {
            datodni=Integer.parseInt(dniTxt.getText());
            idpersona=clase.Profesor.leerIdPersona(conex, datodni);
            rs=clase.Profesor.MostrarProfesor(conex, idpersona);
            while(rs.next()){
                celularTxt.setText(rs.getString(1));
                direccionTxt.setText(rs.getString(2));
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        }
    }
    
    public void datosProf(){
        try{
            dni=clase.Profesor.dniProfesor(conex, idpersona);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        }
    }
    
    public void editarProf(){
        try{
            datodni=Integer.parseInt(dniTxt.getText());
            clase.Profesor.editarPersona(conex, dniTxt.getText(),apellidoTxt.getText().toUpperCase(),nombreTxt.getText().toUpperCase(), idpersona);
            clase.Profesor.editarProfesor(conex,idpersona,celularTxt.getText(),direccionTxt.getText().toUpperCase(),idpersona);
            mostrarPersona();
            limpiar();
            limpiarbotones();
            limpiarespecial();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        }
    }
    
    public void limpiar(){
        dniTxt.setText("");
        nombreTxt.setText("");
        apellidoTxt.setText("");
        direccionTxt.setText("");
        celularTxt.setText("");
        tableProfesor.clearSelection();
    }
    
    public void limpiarbotones(){
        guardarBtn.setEnabled(true);
        editarBtn.setEnabled(false);
        cancelarBtn.setEnabled(false);
        borrarBtn.setEnabled(false);
    }
    
    public void limpiarespecial(){
        cmbOpciones.setSelectedIndex(0);
        nombreTxt.requestFocus(true);
    }
    
    public void limpiarbtnmc(){
        guardarBtn.setEnabled(false);
        editarBtn.setEnabled(true);
        cancelarBtn.setEnabled(true);
        borrarBtn.setEnabled(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        CursoItem = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        lblbuscar = new javax.swing.JLabel();
        lblprofesor = new javax.swing.JLabel();
        buscarTxt = new javax.swing.JTextField();
        cmbOpciones = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProfesor = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblnombre = new javax.swing.JLabel();
        lblapellido = new javax.swing.JLabel();
        lbldni = new javax.swing.JLabel();
        lblcelular = new javax.swing.JLabel();
        lbldireccion = new javax.swing.JLabel();
        nombreTxt = new javax.swing.JTextField();
        apellidoTxt = new javax.swing.JTextField();
        dniTxt = new javax.swing.JTextField();
        celularTxt = new javax.swing.JTextField();
        direccionTxt = new javax.swing.JTextField();
        guardarBtn = new javax.swing.JButton();
        editarBtn = new javax.swing.JButton();
        borrarBtn = new javax.swing.JButton();
        cancelarBtn = new javax.swing.JButton();
        cerrarBtn = new javax.swing.JButton();

        CursoItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/book.png"))); // NOI18N
        CursoItem.setText("Agregar a un Curso");
        CursoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CursoItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(CursoItem);

        setTitle("Formulario de Profesores");
        setPreferredSize(new java.awt.Dimension(774, 475));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        lblbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupa.png"))); // NOI18N
        lblbuscar.setText("Buscar Profesor:");

        lblprofesor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/aula.png"))); // NOI18N
        lblprofesor.setText("Profesor");

        buscarTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscarTxtFocusGained(evt);
            }
        });
        buscarTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buscarTxtKeyTyped(evt);
            }
        });

        cmbOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "NOMBRE", "APELLIDO" }));
        cmbOpciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOpcionesItemStateChanged(evt);
            }
        });

        tableProfesor.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        tableProfesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "DNI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProfesor.setComponentPopupMenu(jPopupMenu1);
        tableProfesor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProfesorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProfesor);
        if (tableProfesor.getColumnModel().getColumnCount() > 0) {
            tableProfesor.getColumnModel().getColumn(0).setResizable(false);
            tableProfesor.getColumnModel().getColumn(1).setResizable(false);
            tableProfesor.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblbuscar)
                        .addGap(18, 18, 18)
                        .addComponent(cmbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buscarTxt)
                        .addGap(18, 18, 18)
                        .addComponent(lblprofesor))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbuscar)
                    .addComponent(cmbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblprofesor))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Datos del Profesor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 102, 102))); // NOI18N

        lblnombre.setText("Nombre:");

        lblapellido.setText("Apellido:");

        lbldni.setText("DNI:");

        lblcelular.setText("Celular:");

        lbldireccion.setText("Direccion:");

        nombreTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreTxtKeyTyped(evt);
            }
        });

        apellidoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                apellidoTxtKeyTyped(evt);
            }
        });

        dniTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dniTxtKeyTyped(evt);
            }
        });

        celularTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                celularTxtKeyTyped(evt);
            }
        });

        direccionTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                direccionTxtKeyTyped(evt);
            }
        });

        guardarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save_as.png"))); // NOI18N
        guardarBtn.setText("Guardar");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        editarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/options_2.png"))); // NOI18N
        editarBtn.setText("Editar");
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        borrarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eraser.png"))); // NOI18N
        borrarBtn.setText("Borrar");
        borrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarBtnActionPerformed(evt);
            }
        });

        cancelarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/help_ring-buoy.png"))); // NOI18N
        cancelarBtn.setText("Cancelar");
        cancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBtnActionPerformed(evt);
            }
        });

        cerrarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close_delete_2.png"))); // NOI18N
        cerrarBtn.setText("Cerrar");
        cerrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbldireccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(direccionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblnombre)
                            .addComponent(lbldni))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(nombreTxt)
                                .addGap(18, 18, 18)
                                .addComponent(lblapellido)
                                .addGap(18, 18, 18)
                                .addComponent(apellidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(dniTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblcelular)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(celularTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(cerrarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cancelarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guardarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(borrarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblnombre)
                        .addComponent(lblapellido)
                        .addComponent(apellidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(guardarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbldni)
                            .addComponent(dniTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcelular)
                            .addComponent(celularTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbldireccion)
                            .addComponent(direccionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cerrarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed
        if((nombreTxt.getText().isEmpty())||(apellidoTxt.getText().isEmpty())
                ||(dniTxt.getText().isEmpty())||(celularTxt.getText().isEmpty())
                ||(direccionTxt.getText().isEmpty())){
            JOptionPane.showMessageDialog(this, "Complete los campos","WARNING",WARNING_MESSAGE);
        }
        else{
            try {
            int op=JOptionPane.showConfirmDialog(this,"Esta seguro de editar los datos?");
                switch (op) {
                    case 0:
                        if(Integer.parseInt(dniTxt.getText())==dni){
                            editarProf();
                        }
                        else{
                            persona=clase.Profesor.leerIdPersona(conex, Integer.parseInt(dniTxt.getText()));
                            if(persona==0){
                                editarProf();
                            }
                            else{
                                if(persona!=0){
                                    datodni=clase.Profesor.dniProfesor(conex, persona);
                                    if(datodni==dni){
                                        editarProf();
                                        break;
                                    }
                                    else{
                                        JOptionPane.showMessageDialog(this, "Ya existe un profesor con ese dni ".concat(dniTxt.getText()),"WARNING",WARNING_MESSAGE);
                                        dniTxt.requestFocus(true);
                                        break;
                                    }
                                }
                            }
                        }
                        break;
                    case 1:
                        nombreTxt.requestFocus(true);
                        break;
                    default:
                        limpiar();
                        limpiarbotones();
                        limpiarespecial();
                        break;
                }
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
            }
        }     
    }//GEN-LAST:event_editarBtnActionPerformed

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        if((nombreTxt.getText().isEmpty())||(apellidoTxt.getText().isEmpty())
                ||(dniTxt.getText().isEmpty())||(celularTxt.getText().isEmpty())
                ||(direccionTxt.getText().isEmpty())){
            JOptionPane.showMessageDialog(this, "Complete los campos","WARNING",WARNING_MESSAGE);
        }
        else{
            try {
                idpersona=clase.Profesor.leerIdPersona(conex, Integer.parseInt(dniTxt.getText()));
                if((idpersona==0)){
                    int op=JOptionPane.showConfirmDialog(this, "Esta seguro de registrar al profesor?");
                    switch (op) {
                        case 0:
                            clase.Profesor.insertarPersonas(conex,dniTxt.getText(),apellidoTxt.getText().toUpperCase(),nombreTxt.getText().toUpperCase());
                            ultimoid=clase.Profesor.leerUltimoIdPersona(conex);
                            clase.Profesor.insertarProfesor(conex, ultimoid,celularTxt.getText(),direccionTxt.getText().toUpperCase(),false);
                            mostrarPersona();
                            limpiar();
                            limpiarespecial();
                            break;
                        case 1:
                            nombreTxt.requestFocus(true);
                            break;
                        default:
                            limpiar();
                            limpiarespecial();
                            break;
                    }
                }
                else{
                    borrado=clase.Profesor.leerBorrado(conex, idpersona);
                    if(borrado==true){
                        int op=JOptionPane.showConfirmDialog(this, "Ya existe un profesor con ese DNI ".concat(dniTxt.getText())+"\nQue talvez fue eliminado"+"\n"+"Desea reinscribir al profesor?");
                        if(op==0){
                            clase.Profesor.altaProfesor(conex, idpersona);
                            mostrarPersona();
                            limpiar();
                            limpiarespecial();
                        }
                        if(op==1){
                            nombreTxt.requestFocus(true);
                        }
                        else{
                            limpiar();
                            limpiarbotones();
                            limpiarespecial();
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Ya existe un profesor con ese DNI ".concat(dniTxt.getText())+"\n Intenta buscarlo!!!");
                        cmbOpciones.setSelectedIndex(0);
                        buscarTxt.requestFocus(true);
                    }
                }
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
            }
        }
    }//GEN-LAST:event_guardarBtnActionPerformed

    @SuppressWarnings("unchecked")
    private void buscarTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarTxtKeyTyped
        int c=evt.getKeyChar();
        switch (cboxitem) {
            case 0:
                if(buscarTxt.getText().length()>=8){
                    evt.consume();
                }   if(!Character.isDigit(c)){
                    evt.consume();
                }   break;
            case 1:
                if(buscarTxt.getText().length()>=16){
                    evt.consume();
                }   if(!Character.isAlphabetic(c)){
                    evt.consume();
                }   break;
            case 2:
                if(buscarTxt.getText().length()>=20){
                    evt.consume();
                }   if(!Character.isAlphabetic(c)) {
                    evt.consume();
                }   break;
        }
        buscarTxt.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (buscarTxt.getText().toUpperCase());
                buscarTxt.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tableProfesor.getModel());
        tableProfesor.setRowSorter(trsFiltro);
        trsFiltro.setRowFilter(RowFilter.regexFilter(buscarTxt.getText().toUpperCase()));
    }//GEN-LAST:event_buscarTxtKeyTyped
    
    private TableRowSorter trsFiltro;
    @SuppressWarnings("unchecked")
    public void filtro() {
        int columnaABuscar = 0;
        if ("Nombre".equalsIgnoreCase(cmbOpciones.getSelectedItem().toString())) {
            columnaABuscar = 0;
        }
        if ("Apellido".equalsIgnoreCase(cmbOpciones.getSelectedItem().toString())) {
            columnaABuscar = 1;
        }
        if ("DNI".equalsIgnoreCase(cmbOpciones.getSelectedItem().toString())) {
            columnaABuscar = 2;
        }
        trsFiltro.setRowFilter(RowFilter.regexFilter(buscarTxt.getText(), columnaABuscar));
    }
    
    private void tableProfesorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProfesorMouseClicked
        int fila=tableProfesor.rowAtPoint(evt.getPoint());
        nombreTxt.setText(tableProfesor.getValueAt(fila,0).toString());
        apellidoTxt.setText(tableProfesor.getValueAt(fila,1).toString());
        dniTxt.setText(tableProfesor.getValueAt(fila,2).toString());
        mostrarProfesor();
        limpiarbtnmc();
        datosProf();
    }//GEN-LAST:event_tableProfesorMouseClicked

    private void cancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBtnActionPerformed
        limpiar();
        limpiarbotones();
        limpiarespecial();
    }//GEN-LAST:event_cancelarBtnActionPerformed

    private void borrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarBtnActionPerformed
        try {
            int op=JOptionPane.showConfirmDialog(this, "Esta seguro de dar de baja al profesor ".concat(nombreTxt.getText()).concat(" ").concat(apellidoTxt.getText()).concat("\nDNI: ").concat(dniTxt.getText()).concat(" ?"));
            switch (op) {
                case 0:
                    clase.Profesor.borrarProfesor(conex, idpersona);
                    clase.Profesor.borrarCursoProfesor(conex,0,datodni);
                    mostrarPersona();
                    limpiar();
                    limpiarbotones();
                    limpiarespecial();
                    break;
                case 1:
                    nombreTxt.requestFocus(true);
                    break;
                default:
                    limpiar();
                    limpiarbotones();
                    limpiarespecial();
                    break;
            }
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage());
        }
    }//GEN-LAST:event_borrarBtnActionPerformed

    private void CursoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CursoItemActionPerformed
        abmCurso c=new abmCurso();
        c.dniTxt.setText(dniTxt.getText());
        c.nombreTxt.setText(nombreTxt.getText());
        c.apellidoTxt.setText(apellidoTxt.getText());
        Dimension desktopSize=panelA.getSize();
        Dimension FrameSize=c.getSize();
        c.setLocation((desktopSize.width-FrameSize.width)/30,(desktopSize.height-FrameSize.height)/7);
        panelA.add(c);
        this.dispose();
        Animacion.Animacion.mover_derecha(0 , 110, 5, 5, panelA);
        c.show();
        c.cursoTxt.requestFocus(true);
    }//GEN-LAST:event_CursoItemActionPerformed

    private void nombreTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTxtKeyTyped
        char c=evt.getKeyChar();
        if(nombreTxt.getText().length()>=45){
            evt.consume();
        }
        if(!Character.isAlphabetic(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_nombreTxtKeyTyped

    private void dniTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dniTxtKeyTyped
        int c=evt.getKeyChar();
        if(dniTxt.getText().length()>=8){
            evt.consume();
        }
        if (!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_dniTxtKeyTyped

    private void apellidoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoTxtKeyTyped
      char c=evt.getKeyChar();
      if(apellidoTxt.getText().length()>=40){
            evt.consume();
        }
        if(!Character.isAlphabetic(c)) {
            evt.consume();
//            JOptionPane.showMessageDialog(null,"Ingrese Solo Letras","APELLIDO ERROR!",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_apellidoTxtKeyTyped

    private void celularTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_celularTxtKeyTyped
        char c=evt.getKeyChar();
        if(celularTxt.getText().length()>=18){
            evt.consume();
        }
        if (!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_celularTxtKeyTyped

    private void cerrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cerrarBtnActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        mostrarPersona();
        limpiarbotones();
        tableProfesor.getTableHeader().setReorderingAllowed(false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void buscarTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarTxtFocusGained
        // TODO add your handling code here:
        limpiar();
        limpiarbotones();
    }//GEN-LAST:event_buscarTxtFocusGained

    private void direccionTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_direccionTxtKeyTyped
        // TODO add your handling code here:
        if(direccionTxt.getText().length()>=50){
            evt.consume();
        }
    }//GEN-LAST:event_direccionTxtKeyTyped

    private void cmbOpcionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOpcionesItemStateChanged
        // TODO add your handling code here:
        cboxitem=cmbOpciones.getSelectedIndex();
        buscarTxt.requestFocus(true);
    }//GEN-LAST:event_cmbOpcionesItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CursoItem;
    public javax.swing.JTextField apellidoTxt;
    private javax.swing.JButton borrarBtn;
    public javax.swing.JTextField buscarTxt;
    private javax.swing.JButton cancelarBtn;
    private javax.swing.JTextField celularTxt;
    private javax.swing.JButton cerrarBtn;
    private javax.swing.JComboBox<String> cmbOpciones;
    private javax.swing.JTextField direccionTxt;
    public javax.swing.JTextField dniTxt;
    private javax.swing.JButton editarBtn;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblapellido;
    private javax.swing.JLabel lblbuscar;
    private javax.swing.JLabel lblcelular;
    private javax.swing.JLabel lbldireccion;
    private javax.swing.JLabel lbldni;
    private javax.swing.JLabel lblnombre;
    private javax.swing.JLabel lblprofesor;
    public javax.swing.JTextField nombreTxt;
    private javax.swing.JTable tableProfesor;
    // End of variables declaration//GEN-END:variables
    private static final Logger LOG = Logger.getLogger(abmProfesor.class.getName());
}
